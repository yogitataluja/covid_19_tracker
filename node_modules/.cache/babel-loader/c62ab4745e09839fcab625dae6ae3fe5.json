{"ast":null,"code":"var _jsxFileName = \"/Users/yogita/Desktop/react_js/covidtrack/src/LineGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport numeral from 'numeral';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem, value).format(\"+0,0\");\n      }\n    }\n  }\n};\n\nconst LineGraph = () => {\n  _s();\n\n  const [data, setdata] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    const chartData = [];\n    let lastDataPoint; //empty object\n    // data[casesType].forEach(date=>\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      console.log(data);\n      const chartData = buildChartData(data, 'cases');\n      setdata(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204,16, 52, 0.5)\",\n          borderColor: '#CC1034',\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LineGraph, \"+PywrUXddRgeVvQSVgpey8V656M=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/yogita/Desktop/react_js/covidtrack/src/LineGraph.jsx"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","LineGraph","setdata","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","console","log","datasets","backgroundColor","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AACA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADI;AAIZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AADD,GAJE;AASZC,EAAAA,mBAAmB,EAAE,KATT;AAUZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,OADA;AAENC,IAAAA,SAAS,EAAE,KAFL;AAGNC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,UAAUC,WAAV,EAAuBC,IAAvB,EAA6B;AAChC,eAAOd,OAAO,CAACa,WAAD,EAAcE,KAAd,CAAP,CAA4BC,MAA5B,CAAmC,MAAnC,CAAP;AACH;AAHM;AAHL;AAVE,CAAhB;;AAsBA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMsB,cAAc,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAG,OAAnB,KAA+B;AAClD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ,CAFkD,CAE9B;AACpB;;AACA,SAAK,IAAIC,IAAT,IAAiBT,IAAI,CAACU,KAAtB,EAA6B;AACzB,UAAIF,aAAJ,EAAmB;AACf,cAAMG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEH,IADc;AAEjBI,UAAAA,CAAC,EAAEb,IAAI,CAACM,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFV,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACH;;AACDH,MAAAA,aAAa,GAAGR,IAAI,CAACM,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACH;;AACD,WAAOF,SAAP;AACH,GAfD;;AAkBAvB,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUhB,IAAI,IAAI;AACVmB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACA,YAAMO,SAAS,GAAGF,cAAc,CAACL,IAAD,EAAO,OAAP,CAAhC;AACAI,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AACI,MAAA,OAAO,EAAEpB,OADb;AAEI,MAAA,IAAI,EAAE;AACFkC,QAAAA,QAAQ,EAAE,CAAC;AACPC,UAAAA,eAAe,EAAE,uBADV;AAEPC,UAAAA,WAAW,EAAE,SAFN;AAGPvB,UAAAA,IAAI,EAAEA;AAHC,SAAD;AADR;AAFV;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApDD;;GAAMG,S;;KAAAA,S;AAsDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\"\nimport numeral from 'numeral'\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n            label: function (tooltipItem, data) {\n                return numeral(tooltipItem, value).format(\"+0,0\")\n            },\n        },\n    },\n\n}\n\nconst LineGraph = () => {\n\n    const [data, setdata] = useState({})\n\n\n    const buildChartData = (data, casesType = \"cases\") => {\n        const chartData = []\n        let lastDataPoint;  //empty object\n        // data[casesType].forEach(date=>\n        for (let date in data.cases) {\n            if (lastDataPoint) {\n                const newDataPoint = {\n                    x: date,\n                    y: data[casesType][date] - lastDataPoint\n                }\n                chartData.push(newDataPoint)\n            }\n            lastDataPoint = data[casesType][date]\n        }\n        return chartData\n    }\n\n\n    useEffect(() => {\n        fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                const chartData = buildChartData(data, 'cases')\n                setdata(chartData)\n            })\n    }, [])\n\n\n\n    return (\n        <div>\n            <h1>I am a Graph</h1>\n            <Line\n                options={options}\n                data={{\n                    datasets: [{\n                        backgroundColor: \"rgba(204,16, 52, 0.5)\",\n                        borderColor: '#CC1034',\n                        data: data\n                    }\n                    ]\n                }}\n\n            />\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}