{"ast":null,"code":"var _jsxFileName = \"/Users/yogita/Desktop/react_js/covidtrack/src/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  // code to get country in dropedown button\n  const [countries, setcountries] = useState([\"Worldwide\"]); // eslint-disable-next-lin\n\n  const [country, setcountry] = useState(\"Worldwide\");\n  const [countryInfo, setcountryInfo] = useState({});\n  useEffect(() => {\n    // Asynch->send a request, wait for it, do something with\n    const getcountrydata = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\") // send request to server and  wait until it respond\n      .then(response => response.json()) // after it come back with the response . I want to first get the entire response and just take the json from it\n      .then(data => {\n        //once i got that response which is basically resemble as our data essentially then i want to go and set countary \n        const countries = data.map(val => ( //I am going through every country and return slightly different shape or i want only some of the stuff  \n        {\n          // returning an object)                   // once i got that tree i want to restucture it\n          name: val.country,\n          value: val.countryInfo.iso2\n        }));\n        setcountries(countries);\n      });\n    };\n\n    getcountrydata();\n  }, []); //Run only when component load(refresh)\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value; //  which value(country) we select is now store in countryCode or at placeof worldwide\n\n    setcountry(countryCode);\n    const url = countryCode === \"Worlwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`; // if sellect worldwide show all https://disease.sh/v3/covid-19/all\n    // if select any country  https://disease.sh/v3/covid-19/country_code\n\n    await fetch(url).then(response => response.json()).then(data => {\n      setcountry(countryCode);\n      setcountryInfo(data);\n    });\n  };\n\n  console.log(\"Country Info\", countryInfo);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"COVID-19 Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"app_control\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          onChange: onCountryChange,\n          variant: \"outlined\",\n          value: country,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Worldwide\",\n            children: \"Worldwide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), countries.map(country => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\n\n_s(Header, \"Ld9TIj5bAgm0+o3uLFDrqgVgvN0=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/yogita/Desktop/react_js/covidtrack/src/Header.jsx"],"names":["React","useState","useEffect","FormControl","MenuItem","Select","Header","countries","setcountries","country","setcountry","countryInfo","setcountryInfo","getcountrydata","fetch","then","response","json","data","map","val","name","value","iso2","onCountryChange","event","countryCode","target","url","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,mBAA9C;;;;AACA,SAASC,MAAT,GAAkB;AAAA;;AACd;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAC,WAAD,CAAD,CAA1C,CAFc,CAGd;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,WAAD,CAAtC;AAEA,QAAK,CAACU,WAAD,EAAcC,cAAd,IAA+BX,QAAQ,CAAC,EAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEA,UAAMW,cAAc,GAAG,YAAY;AAC/B,YAAMC,KAAK,CAAC,0CAAD,CAAL,CAAkD;AAAlD,OACDC,IADC,CACKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADlB,EACmC;AADnC,OAEDF,IAFC,CAEKG,IAAD,IAAU;AAAG;AACf,cAAMX,SAAS,GAAGW,IAAI,CAACC,GAAL,CAAUC,GAAD,MAAY;AACnC;AAAsC;AAClCC,UAAAA,IAAI,EAAED,GAAG,CAACX,OADd;AAEIa,UAAAA,KAAK,EAAEF,GAAG,CAACT,WAAJ,CAAgBY;AAF3B,SADuB,CAAT,CAAlB;AAMAf,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACH,OAVC,CAAN;AAWH,KAZD;;AAaAM,IAAAA,cAAc;AACjB,GAjBQ,EAiBN,EAjBM,CAAT,CAPc,CAwBR;;AAEN,QAAMW,eAAe,GAAI,MAAOC,KAAP,IAAiB;AACtC,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaL,KAAjC,CADsC,CACC;;AACvCZ,IAAAA,UAAU,CAACgB,WAAD,CAAV;AACA,UAAME,GAAG,GAAGF,WAAW,KAAK,UAAhB,GAA6B,oCAA7B,GAAqE,4CAA2CA,WAAY,EAAxI,CAHsC,CAKtC;AACA;;AACA,UAAMZ,KAAK,CAACc,GAAD,CAAL,CACLb,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECG,IAAD,IAAQ;AACVR,MAAAA,UAAU,CAACgB,WAAD,CAAV;AACAd,MAAAA,cAAc,CAACM,IAAD,CAAd;AACH,KALK,CAAN;AAOH,GAdD;;AAeAW,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BnB,WAA3B;AACA,sBACI;AAAA,2BACK;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,aAAvB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEa,eAAlB;AAAmC,UAAA,OAAO,EAAC,UAA3C;AAAsD,UAAA,KAAK,EAAEf,OAA7D;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGKF,SAAS,CAACY,GAAV,CAAeV,OAAD,IAAa;AACxB,gCACI,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEA,OAAO,CAACa,KAAzB;AAAA,wBAAiCb,OAAO,CAACY;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL,mBADJ;AAmBH;;GA7DQf,M;;KAAAA,M;AA+DT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\nfunction Header() {\n    // code to get country in dropedown button\n    const [countries, setcountries] = useState([\"Worldwide\"])\n    // eslint-disable-next-lin\n    const [country, setcountry] = useState(\"Worldwide\")\n\n    const[countryInfo, setcountryInfo]= useState({})\n    useEffect(() => {\n        // Asynch->send a request, wait for it, do something with\n\n        const getcountrydata = async () => {\n            await fetch(\"https://disease.sh/v3/covid-19/countries\") // send request to server and  wait until it respond\n                .then((response) => response.json()) // after it come back with the response . I want to first get the entire response and just take the json from it\n                .then((data) => {  //once i got that response which is basically resemble as our data essentially then i want to go and set countary \n                    const countries = data.map((val) => (  //I am going through every country and return slightly different shape or i want only some of the stuff  \n                        {                                     // returning an object)                   // once i got that tree i want to restucture it\n                            name: val.country,\n                            value: val.countryInfo.iso2\n                        }))\n\n                    setcountries(countries)\n                })\n        }\n        getcountrydata()\n    }, [])//Run only when component load(refresh)\n\n    const onCountryChange =  async (event) => {\n        const countryCode = event.target.value //  which value(country) we select is now store in countryCode or at placeof worldwide\n        setcountry(countryCode)\n        const url = countryCode === \"Worlwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n        // if sellect worldwide show all https://disease.sh/v3/covid-19/all\n        // if select any country  https://disease.sh/v3/covid-19/country_code\n        await fetch(url)\n        .then((response) => response.json())\n        .then((data)=>{\n            setcountry(countryCode)\n            setcountryInfo(data)\n        })\n\n    }\n    console.log(\"Country Info\",countryInfo)\n    return (\n        <>\n             <div className=\"app_header\">\n                {/* Title+ select input drop down button */}\n                <h1>COVID-19 Tracker</h1>\n                <FormControl className=\"app_control\">\n                    <Select onChange={onCountryChange} variant=\"outlined\" value={country}>\n                        <MenuItem value=\"Worldwide\">Worldwide</MenuItem>\n                        {/* loop through all the countary  and show dropdown with option */}\n                        {countries.map((country) => {\n                            return (\n                                <MenuItem value={country.value}>{country.name}</MenuItem>\n                            )\n                        })}\n                    </Select>\n                </FormControl>\n            </div>\n        </>\n    )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}