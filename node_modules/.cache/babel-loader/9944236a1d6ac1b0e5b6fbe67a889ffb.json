{"ast":null,"code":"var _jsxFileName = \"/Users/yogita/Desktop/react_js/covidtrack/src/LineGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {};\n\nconst LineGraph = () => {\n  _s();\n\n  const [data, setdata] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    const chartData = [];\n    let lastDataPoint; //empty object\n    // data[casesType].forEach(date=>\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      console.log(data);\n      const chartData = buildChartData(data, 'cases');\n      setdata(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204,16, 52, 0.5)\",\n          borderColor: '#CC1034',\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LineGraph, \"+PywrUXddRgeVvQSVgpey8V656M=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/yogita/Desktop/react_js/covidtrack/src/LineGraph.jsx"],"names":["React","useState","useEffect","Line","options","LineGraph","data","setdata","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","console","log","datasets","backgroundColor","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AACA,MAAMC,OAAO,GAAC,EAAd;;AAIA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBN,QAAQ,CAAE,EAAF,CAA9B;;AAGA,QAAMO,cAAc,GAAE,CAACF,IAAD,EAAOG,SAAS,GAAE,OAAlB,KAA4B;AAC9C,UAAMC,SAAS,GAAC,EAAhB;AACA,QAAIC,aAAJ,CAF8C,CAE1B;AACpB;;AACG,SAAK,IAAIC,IAAT,IAAiBN,IAAI,CAACO,KAAtB,EAA6B;AAC5B,UAAGF,aAAH,EAAiB;AACb,cAAMG,YAAY,GAAC;AACfC,UAAAA,CAAC,EAACH,IADa;AAEfI,UAAAA,CAAC,EAACV,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,IAAsBD;AAFT,SAAnB;AAIDD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACF;;AACDH,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACH;;AACD,WAAOF,SAAP;AACH,GAfD;;AAkBAR,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMb,IAAI,IAAE;AACRgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,YAAMI,SAAS,GAAGF,cAAc,CAACF,IAAD,EAAO,OAAP,CAAhC;AACAC,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAYA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEI,QAAC,IAAD;AACA,MAAA,OAAO,EAAEN,OADT;AAEI,MAAA,IAAI,EAAE;AAACoB,QAAAA,QAAQ,EAAC,CAAC;AACbC,UAAAA,eAAe,EAAC,uBADH;AAEbC,UAAAA,WAAW,EAAC,SAFC;AAGbpB,UAAAA,IAAI,EAACA;AAHQ,SAAD;AAAV;AAFV;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAjDD;;GAAMD,S;;KAAAA,S;AAmDN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Line} from \"react-chartjs-2\"\nconst options={\n    \n}\n\nconst LineGraph = () => {\n\n    const [data, setdata]=useState( {})\n\n\n    const buildChartData= (data, casesType =\"cases\")=>{\n        const chartData=[]\n        let lastDataPoint;  //empty object\n        // data[casesType].forEach(date=>\n           for( let date in data.cases) {\n            if(lastDataPoint){\n                const newDataPoint={\n                    x:date,\n                    y:data[casesType][date]-lastDataPoint\n                }\n               chartData.push(newDataPoint) \n            }\n            lastDataPoint = data[casesType][date]\n        }\n        return chartData\n    }\n\n\n    useEffect(() => {\n        fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then(response => response.json())\n        .then(data=>{\n            console.log(data)\n            const chartData = buildChartData(data, 'cases')\n            setdata(chartData)\n        })   \n    }, [])\n    \n\n\n    return (\n        <div>\n        <h1>I am a Graph</h1>\n            <Line\n            options={options}\n                data={{datasets:[{\n                    backgroundColor:\"rgba(204,16, 52, 0.5)\",\n                    borderColor:'#CC1034',\n                    data:data}\n                ]}}\n                \n            />\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}