{"ast":null,"code":"var _jsxFileName = \"/Users/yogita/Desktop/react_js/covidtrack/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport Map from './Map';\nimport { Card, CardContent } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // code to get country in dropedown button\n  const [countries, setcountries] = useState([\"Worldwide\"]); // eslint-disable-next-lin\n\n  const [country, setcountry] = useState(\"Worldwide\");\n  const [countryInfo, setcountryInfo] = useState({});\n  const [tableData, settableData] = useState();\n  useEffect(() => {\n    // Asynch->send a request, wait for it, do something with\n    const getcountrydata = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\") // send request to server and  wait until it respond\n      .then(response => response.json()) // after it come back with the response . I want to first get the entire response and just take the json from it\n      .then(data => {\n        //once i got that response which is basically resemble as our data essentially then i want to go and set countary \n        const countries = data.map(val => ( //I am going through every country and return slightly different shape or i want only some of the stuff  \n        {\n          // returning an object)                   // once i got that tree i want to restucture it\n          name: val.country,\n          value: val.countryInfo.iso2\n        }));\n        setTableData();\n        setcountries(countries);\n      });\n    };\n\n    getcountrydata();\n  }, []); //Run only when component load(refresh)\n  // code start for info box update\n  // code to implement worldwide\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setcountryInfo(data);\n    });\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value; //  which value(country) we select is now store in countryCode or at placeof worldwide\n\n    setcountry(countryCode);\n    const url = countryCode === \"Worlwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`; // if sellect worldwide show all https://disease.sh/v3/covid-19/all\n    // if select any country  https://disease.sh/v3/covid-19/country_code\n\n    await fetch(url).then(response => response.json()).then(data => {\n      setcountry(countryCode);\n      setcountryInfo(data);\n    });\n  };\n\n  console.log(\"Country Info\", countryInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app  d-flex justify-content-evenly\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_control\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onChange: onCountryChange,\n            variant: \"outlined\",\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), countries.map(country => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.value,\n                children: country.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_status d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right \",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [\"    \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"7k1DyDwPI6cM1CnXQ2DWSeFkJIY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yogita/Desktop/react_js/covidtrack/src/App.jsx"],"names":["React","useState","useEffect","FormControl","MenuItem","Select","InfoBox","Map","Card","CardContent","App","countries","setcountries","country","setcountry","countryInfo","setcountryInfo","tableData","settableData","getcountrydata","fetch","then","response","json","data","map","val","name","value","iso2","setTableData","onCountryChange","event","countryCode","target","url","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\n\nimport InfoBox from './InfoBox';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\"\nimport Map from './Map'\nimport { Card, CardContent } from '@material-ui/core';\n\n\nconst App = () => {\n    // code to get country in dropedown button\n    const [countries, setcountries] = useState([\"Worldwide\"])\n    // eslint-disable-next-lin\n    const [country, setcountry] = useState(\"Worldwide\")\n\n    const[countryInfo, setcountryInfo]= useState({})\n\n    const [tableData, settableData]=useState()\n    useEffect(() => {\n        // Asynch->send a request, wait for it, do something with\n\n        const getcountrydata = async () => {\n            await fetch(\"https://disease.sh/v3/covid-19/countries\") // send request to server and  wait until it respond\n                .then((response) => response.json()) // after it come back with the response . I want to first get the entire response and just take the json from it\n                .then((data) => {  //once i got that response which is basically resemble as our data essentially then i want to go and set countary \n                    const countries = data.map((val) => (  //I am going through every country and return slightly different shape or i want only some of the stuff  \n                        {                                     // returning an object)                   // once i got that tree i want to restucture it\n                            name: val.country,\n                            value: val.countryInfo.iso2\n                        }))\n                     setTableData()\n                    setcountries(countries)\n                })\n        }\n        getcountrydata()\n    }, [])//Run only when component load(refresh)\n\n    // code start for info box update\n\n    // code to implement worldwide\nuseEffect(()=>{\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((response) => response.json())\n    .then((data)=>{\n\n        setcountryInfo(data)\n\n    })\n},[])\n\n    const onCountryChange =  async (event) => {\n        const countryCode = event.target.value //  which value(country) we select is now store in countryCode or at placeof worldwide\n        setcountry(countryCode)\n        const url = countryCode === \"Worlwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n        // if sellect worldwide show all https://disease.sh/v3/covid-19/all\n        // if select any country  https://disease.sh/v3/covid-19/country_code\n        await fetch(url)\n        .then((response) => response.json())\n        .then((data)=>{\n            setcountry(countryCode)\n            setcountryInfo(data)\n        })\n\n    }\n    console.log(\"Country Info\",countryInfo)\n\n\n    return (\n        <div className=\"app  d-flex justify-content-evenly\">\n            <div className=\"app_left\">\n            <div className=\"app_header\">\n                {/* Title+ select input drop down button */}\n                <h1>COVID-19 Tracker</h1>\n                <FormControl className=\"app_control\">\n                    <Select onChange={onCountryChange} variant=\"outlined\" value={country}>\n                        <MenuItem value=\"Worldwide\">Worldwide</MenuItem>\n                        {/* loop through all the countary  and show dropdown with option */}\n                        {countries.map((country) => {\n                            return (\n                                <MenuItem value={country.value}>{country.name}</MenuItem>\n                            )\n                        })}\n                    </Select>\n                </FormControl>\n            </div>\n                <div className=\"app_status d-flex justify-content-between\">\n                    <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n                    <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n                    <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n                </div>\n                {/* Map */}\n                <Map />\n            </div>\n\n\n\n            <Card className=\"app_right \">\n                <CardContent>    {/*Cardcontent give us nice white background area   */}\n                <h3>Live Cases by Country</h3>\n                <h3>Worldwide new Cases</h3>\n                    {/* table */}\n                    {/* Graph */}\n                </CardContent>\n\n            </Card>\n\n\n\n        </div>\n\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}